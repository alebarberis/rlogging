% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1-log-functions.R
\name{createLogger}
\alias{createLogger}
\title{Logger Class Constructor}
\usage{
createLogger(
  path = character(),
  con = NULL,
  verbose = TRUE,
  level = c("FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL", "OFF")
)
}
\arguments{
\item{path}{character vector, a path to the log file to use}

\item{con}{(optional) connection to a file}

\item{verbose}{logical, whether R should report extra information on progress}

\item{level}{character vector, the log level of the logger. Levels are a
mechanism to categorise the severity of an event.
Eight levels are supported:
\describe{
\item{\code{"OFF"}}{indicates the logger is inactive}
\item{\code{"FATAL"}}{indicates a fatal event in the application that prevents it from running}
\item{\code{"ERROR"}}{indicates an error in the application, possibly recoverable}
\item{\code{"WARN"}}{indicates an event that might lead to an error}
\item{\code{"INFO"}}{indicates informational messages}
\item{\code{"DEBUG"}}{indicates general debugging messages}
\item{\code{"TRACE"}}{indicates fine-grained debug events}
\item{\code{"ALL"}}{all levels are considered}
}
Levels are considered ordered: \code{OFF < FATAL < ERROR < WARN < INFO < DEBUG < TRACE < ALL}

For example, if we set the level of a logger to \code{DEBUG}, then all \code{INFO}, \code{WARN},
\code{ERROR}, and \code{FATAL} events will be logged.}
}
\value{
A \code{\link{Logger}} object.
}
\description{
Constructor for the object.
}
\details{
A log request in a Logger of \code{level} \strong{l}
is enabled if the level of the request is \strong{<= l}.
}
\examples{
#create a logger
logger = createLogger(
 level = "DEBUG"
)

}
\seealso{
\code{\link{logAll}},
\code{\link{logTrace}},
\code{\link{logDebug}},
\code{\link{logInfo}},
\code{\link{logWarn}},
\code{\link{logError}},
\code{\link{logFatal}}
}
\author{
Alessandro Barberis
}
