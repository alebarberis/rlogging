[{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An introduction to `rlogging`","text":"rlogging helpful package providing easy way setup logging system R.","code":""},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"An introduction to `rlogging`","text":"Firstly, load rlogging:","code":"library(rlogging)"},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"rlogging","dir":"Articles","previous_headings":"","what":"rlogging","title":"An introduction to `rlogging`","text":"present simple example show use rlogging.","code":""},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"a-logger","dir":"Articles","previous_headings":"rlogging","what":"A Logger","title":"An introduction to `rlogging`","text":"?Logger class core logging system. Logger object list consisting 4 elements: path: (optional) character vector, path log file use con: (optional) connection file verbose: logical, whether R report extra information progress level: character vector, log level logger Eight levels supported: \"\": indicates logger inactive \"FATAL\": indicates fatal event application prevents running \"ERROR\": indicates error application, possibly recoverable \"WARN\": indicates event might lead error \"INFO\": indicates informational messages \"DEBUG\": indicates general debugging messages \"TRACE\": indicates fine-grained debug events \"\": levels considered Levels considered ordered: < FATAL < ERROR < WARN < INFO < DEBUG < TRACE < . example, set level logger DEBUG, INFO, WARN, ERROR, FATAL events logged. Let’s create loggers different levels:","code":"#Logger with `level` set to \"INFO\" loggerInfo  = createLogger(level = \"INFO\") #Logger with `level` set to \"DEBUG\" loggerDebug = createLogger(level = \"DEBUG\") #Logger with `level` set to \"TRACE\" loggerTrace = createLogger(level = \"TRACE\")"},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"example","dir":"Articles","previous_headings":"rlogging","what":"Example","title":"An introduction to `rlogging`","text":"Let’s create simple function show use rlogging. example, can write function calculate sum two numbers b: defined function three arguments input: : numeric value b: numeric value logger: object class Logger function , inserted various messages different logging levels. Let’s see happens use different loggers. example, let’s compute sum 3 + 4.","code":"mySumFunction <- function(     a = 1,     b = 2,     logger   ){   #We insert here an informational message   logInfo(object = logger, message = \"Start of mySumFunction\", sep = \"\\n\", add.level = T, add.time = T)      #We insert here a fine-grained informational message (trace level)   logTrace(object = logger, message = \"Check if logger has a connection to a file and (if so) open it...\", add.level = T, add.time = T)   logger = openCon(object = logger)   logTrace(object = logger, message = \"DONE\", sep = \"\\n\")      #We insert here a fine-grained informational message (debug level)   logDebug(object = logger, message = \"Check input...\", add.level = T, add.time = T)   if(isFALSE(is.numeric(a))){stop(\"'a' must be numeric\")}   if(isFALSE(is.numeric(b))){stop(\"'b' must be numeric\")}   logDebug(object = logger, message = \"DONE\", sep = \"\\n\")      #We insert here a fine-grained informational message (debug level)   logDebug(object = logger, message = \"Compute sum...\", add.level = T, add.time = T)   out = a + b   logDebug(object = logger, message = \"DONE\", sep = \"\\n\")      #We insert here a fine-grained informational message (trace level)   logTrace(object = logger, message = \"Close an opened connection...\", add.level = T, add.time = T)   closeCon(object = logger)   logTrace(object = logger, message = \"DONE\", sep = \"\\n\")      #We insert here an informational message   logInfo(object = logger, message = \"End of mySumFunction\", sep = \"\\n\", add.level = T, add.time = T)      return(out) }"},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"log-level-info","dir":"Articles","previous_headings":"rlogging","what":"Log level: INFO","title":"An introduction to `rlogging`","text":"Let’s check happens use logger logging level set \"INFO\". expected, INFO messages reported.","code":"mySumFunction(   a = 3,   b = 4,   logger = loggerInfo ) #> [INFO]  2023-02-06 17:55:29 Start of mySumFunction #> [INFO]  2023-02-06 17:55:29 End of mySumFunction #> [1] 7"},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"log-level-debug","dir":"Articles","previous_headings":"rlogging","what":"Log level: DEBUG","title":"An introduction to `rlogging`","text":"Let’s check happens use logger logging level set \"DEBUG\". expected, messages level DEBUG (.e., INFO) reported.","code":"mySumFunction(   a = 3,   b = 4,   logger = loggerDebug ) #> [INFO]  2023-02-06 17:55:29 Start of mySumFunction #> [DEBUG] 2023-02-06 17:55:29 Check input...DONE #> [DEBUG] 2023-02-06 17:55:29 Compute sum...DONE #> [INFO]  2023-02-06 17:55:29 End of mySumFunction #> [1] 7"},{"path":"https://alebarberis.github.io/rlogging/articles/rlogging.html","id":"log-level-trace","dir":"Articles","previous_headings":"rlogging","what":"Log level: TRACE","title":"An introduction to `rlogging`","text":"Let’s check happens use logger logging level set \"TRACE\". expected, messages level TRACE (.e., DEBUG INFO) reported.","code":"mySumFunction(   a = 3,   b = 4,   logger = loggerTrace ) #> [INFO]  2023-02-06 17:55:30 Start of mySumFunction #> [TRACE] 2023-02-06 17:55:30 Check if logger has a connection to a file and (if so) open it...DONE #> [DEBUG] 2023-02-06 17:55:30 Check input...DONE #> [DEBUG] 2023-02-06 17:55:30 Compute sum...DONE #> [TRACE] 2023-02-06 17:55:30 Close an opened connection...DONE #> [INFO]  2023-02-06 17:55:30 End of mySumFunction #> [1] 7"},{"path":"https://alebarberis.github.io/rlogging/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alessandro Barberis. Author, maintainer.","code":""},{"path":"https://alebarberis.github.io/rlogging/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barberis (2023). rlogging: R logging system. https://github.com/alebarberis/rlogging, https://alebarberis.github.io/rlogging/.","code":"@Manual{,   title = {rlogging: R logging system},   author = {Alessandro Barberis},   year = {2023},   note = {https://github.com/alebarberis/rlogging, https://alebarberis.github.io/rlogging/}, }"},{"path":"https://alebarberis.github.io/rlogging/index.html","id":"rlogging","dir":"","previous_headings":"","what":"R logging system","title":"R logging system","text":"rlogging R package providing ready--use functions basic logging R. takes inspiration widely-used Log4j Java-based logging utility.","code":""},{"path":"https://alebarberis.github.io/rlogging/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R logging system","text":"can install latest development version GitHub (requires devtools package):","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") }  devtools::install_github(   repo = \"alebarberis/rlogging\",    dependencies = TRUE,    build_vignettes = FALSE )"},{"path":"https://alebarberis.github.io/rlogging/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"R logging system","text":"just getting started rlogging, recommend looking Getting Started section site.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Structure — Logger","title":"Logger Structure — Logger","text":"Logger class serves core element logging system.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/Logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Structure — Logger","text":"","code":"Logger(path, con, verbose, level)"},{"path":"https://alebarberis.github.io/rlogging/reference/Logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Structure — Logger","text":"path character vector, path log file use con (optional) connection file verbose logical, whether R report extra information progress level character vector, log level logger. Levels mechanism categorise severity event. Eight levels supported: \"\" indicates logger inactive \"FATAL\" indicates fatal event application prevents running \"ERROR\" indicates error application, possibly recoverable \"WARN\" indicates event might lead error \"INFO\" indicates informational messages \"DEBUG\" indicates general debugging messages \"TRACE\" indicates fine-grained debug events \"\" levels considered Levels considered ordered: < FATAL < ERROR < WARN < INFO < DEBUG < TRACE < example, set level logger DEBUG, INFO, WARN, ERROR, FATAL events logged.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/Logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger Structure — Logger","text":"Logger object.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/Logger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Structure — Logger","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Connection Utility Functions — connectionUtilityFunctions","title":"Connection Utility Functions — connectionUtilityFunctions","text":"Functions check existence, create, open, close connections.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connection Utility Functions — connectionUtilityFunctions","text":"","code":"filePathExists(path = NULL)  is.connection(con)  checkFilePathAndOpenConnection(path = NULL)  isOpenConnection(con)  checkConAndClose(con)"},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connection Utility Functions — connectionUtilityFunctions","text":"path character string, file path con object tested","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connection Utility Functions — connectionUtilityFunctions","text":"logical value, whether path file exists. Returns TRUE FALSE depending whether argument connection class . opened connection. Returns TRUE FALSE depending whether argument opened connection.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connection Utility Functions — connectionUtilityFunctions","text":"filePathExists(): Checks existence file path .connection(): Checks con connection. checkFilePathAndOpenConnection(): Checks existence file path returns opened connection. isOpenConnection(): Returns TRUE FALSE depending whether argument opened connection. checkConAndClose(): Closes opened connection.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/connectionUtilityFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connection Utility Functions — connectionUtilityFunctions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Log Line — createLogLine","title":"Create a Log Line — createLogLine","text":"Returns character vector representing line break.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Log Line — createLogLine","text":"","code":"createLogLine(start = \"#\", middle = \"-\", times = 10, end = start)"},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Log Line — createLogLine","text":"start character vector, starting string line break middle character vector, middle part line break times integer vector, number times repeat middle string end character vector, string ending line break","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Log Line — createLogLine","text":"character string obtained pasting together start, middle, end. times provided, middle string replicated.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Log Line — createLogLine","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Log Line — createLogLine","text":"","code":"createLogLine() #> [1] \"#----------#\""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Class Constructor — createLogger","title":"Logger Class Constructor — createLogger","text":"Constructor object.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Class Constructor — createLogger","text":"","code":"createLogger(   path = character(),   con = NULL,   verbose = TRUE,   level = c(\"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\", \"ALL\", \"OFF\") )"},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Class Constructor — createLogger","text":"path character vector, path log file use con (optional) connection file verbose logical, whether R report extra information progress level character vector, log level logger. Levels mechanism categorise severity event. Eight levels supported: \"\" indicates logger inactive \"FATAL\" indicates fatal event application prevents running \"ERROR\" indicates error application, possibly recoverable \"WARN\" indicates event might lead error \"INFO\" indicates informational messages \"DEBUG\" indicates general debugging messages \"TRACE\" indicates fine-grained debug events \"\" levels considered Levels considered ordered: < FATAL < ERROR < WARN < INFO < DEBUG < TRACE < example, set level logger DEBUG, INFO, WARN, ERROR, FATAL events logged.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger Class Constructor — createLogger","text":"Logger object.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logger Class Constructor — createLogger","text":"log request Logger level l enabled level request <= l.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Class Constructor — createLogger","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/createLogger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger Class Constructor — createLogger","text":"","code":"#create a logger logger = createLogger(  level = \"DEBUG\" )"},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the existence of a directory — dirExists","title":"Check the existence of a directory — dirExists","text":"function checks existence directory input. See Details section information.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the existence of a directory — dirExists","text":"","code":"dirExists(path)"},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the existence of a directory — dirExists","text":"path character string, directory path","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the existence of a directory — dirExists","text":"TRUE output path directory, FALSE otherwise.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the existence of a directory — dirExists","text":"function checks path exists. , creates entire path using dir.create recursive = TRUE.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/dirExists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the existence of a directory — dirExists","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log levels — getLogLevels","title":"Get log levels — getLogLevels","text":"Returns log levels included selected level","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log levels — getLogLevels","text":"","code":"getLogLevels(   level = c(\"OFF\", \"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\", \"ALL\") )"},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log levels — getLogLevels","text":"level character string, log level","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log levels — getLogLevels","text":"vector containing levels corresponding level","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLevels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get log levels — getLogLevels","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Line — getLogLine","title":"Log Line — getLogLine","text":"Returns pre-defined character vector.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Line — getLogLine","text":"","code":"getLogLine(line = c(\"1\", \"2\", \"3\"), len = 10)  getShortLogLine(line = c(\"1\", \"2\", \"3\"), len = 42L)  getLongLogLine(line = c(\"1\", \"2\", \"3\"), len = 76L)"},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Line — getLogLine","text":"line character vector, type line return: \"1\" character string form '----------' \"2\" character string form '#--------#' \"3\" character string form '##########' len integer, length output line","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Line — getLogLine","text":"character vector.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Log Line — getLogLine","text":"getShortLogLine(): character string pre-defined length getLongLogLine(): character string pre-defined length","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/getLogLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Line — getLogLine","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"List available levels — listAvailableLevels","title":"List available levels — listAvailableLevels","text":"function lists available logging levels. See Details section information.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available levels — listAvailableLevels","text":"","code":"listAvailableLevels()"},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available levels — listAvailableLevels","text":"path character string, directory path","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available levels — listAvailableLevels","text":"character vector containing available logging levels.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List available levels — listAvailableLevels","text":"Eight levels supported: \"\" indicates logger inactive \"FATAL\" indicates fatal event application prevents running \"ERROR\" indicates error application, possibly recoverable \"WARN\" indicates event might lead error \"INFO\" indicates informational messages \"DEBUG\" indicates general debugging messages \"TRACE\" indicates fine-grained debug events \"\" levels considered","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/listAvailableLevels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List available levels — listAvailableLevels","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logAll","title":"Log Method — logAll","text":"function prints log information level .","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logAll","text":"","code":"logAll(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logAll","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logAll","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logAll","text":"log information level printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logAll","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logAll","text":"","code":"#create logger logger = createLogger(level = \"ALL\")  #log logAll(object = logger, message = 'Hello')  #log with level logAll(object = logger, message = 'Hello', add.level = TRUE)  #log with time logAll(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logDebug","title":"Log Method — logDebug","text":"function prints log information level DEBUG.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logDebug","text":"","code":"logDebug(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logDebug","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logDebug","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logDebug","text":"log information level DEBUG printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logDebug","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDebug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logDebug","text":"","code":"#create logger logger = createLogger(level = \"DEBUG\")  #log logDebug(object = logger, message = 'Hello') #> Hello  #log with level logDebug(object = logger, message = 'Hello', add.level = TRUE) #> [DEBUG] Hello  #log with time logDebug(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [DEBUG] 2023-02-06 17:55:25 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/logDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logDefault","title":"Log Method — logDefault","text":"Generic function print log information.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logDefault","text":"","code":"logDefault(   object,   log.level,   message,   sep = \"\",   add.level = FALSE,   add.time = FALSE )"},{"path":"https://alebarberis.github.io/rlogging/reference/logDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logDefault","text":"object object class Logger log.level character string, log level information message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logDefault","text":"None (invisible NULL).","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logDefault.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logDefault","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logError","title":"Log Method — logError","text":"function prints log information level FATAL.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logError","text":"","code":"logError(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logError","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logError","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logError","text":"log information level FATAL printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logError","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logError.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logError","text":"","code":"#create logger logger = createLogger(level = \"ERROR\")  #log logError(object = logger, message = 'Hello') #> Hello  #log with level logError(object = logger, message = 'Hello', add.level = TRUE) #> [ERROR] Hello  #log with time logError(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [ERROR] 2023-02-06 17:55:25 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logFatal","title":"Log Method — logFatal","text":"function prints log information level FATAL.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logFatal","text":"","code":"logFatal(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logFatal","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logFatal","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logFatal","text":"log information level FATAL printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logFatal","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logFatal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logFatal","text":"","code":"#create logger logger = createLogger(level = \"FATAL\")  #log logFatal(object = logger, message = 'Hello') #> Hello  #log with level logFatal(object = logger, message = 'Hello', add.level = TRUE) #> [FATAL] Hello  #log with time logFatal(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [FATAL] 2023-02-06 17:55:26 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logInfo","title":"Log Method — logInfo","text":"function prints log information level INFO.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logInfo","text":"","code":"logInfo(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logInfo","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logInfo","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logInfo","text":"log information level INFO printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logInfo","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logInfo","text":"","code":"#create logger logger = createLogger(level = \"INFO\")  #log logInfo(object = logger, message = 'Hello') #> Hello  #log with level logInfo(object = logger, message = 'Hello', add.level = TRUE) #> [INFO]  Hello  #log with time logInfo(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [INFO]  2023-02-06 17:55:26 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/logLevelNameFixedLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Get log levels — logLevelNameFixedLength","title":"Get log levels — logLevelNameFixedLength","text":"Returns log level string fixed length.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLevelNameFixedLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get log levels — logLevelNameFixedLength","text":"","code":"logLevelNameFixedLength(level)"},{"path":"https://alebarberis.github.io/rlogging/reference/logLevelNameFixedLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get log levels — logLevelNameFixedLength","text":"level character string, log level","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLevelNameFixedLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get log levels — logLevelNameFixedLength","text":"vector containing levels corresponding level","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLevelNameFixedLength.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get log levels — logLevelNameFixedLength","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Lines — logLines","title":"Log Lines — logLines","text":"Creates pre-defined log line. Creates pre-defined character vector.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Lines — logLines","text":"","code":"createLogLine1(len = 10)  createLogLine2(len = 10)  createLogLine3(len = 10)"},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Lines — logLines","text":"len integer, length output line object Logger","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Lines — logLines","text":"character string form '----------'","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Log Lines — logLines","text":"createLogLine2(): character string form '#--------#' createLogLine3(): character string form '##########'","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Lines — logLines","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logTrace","title":"Log Method — logTrace","text":"function prints log information level TRACE.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logTrace","text":"","code":"logTrace(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logTrace","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logTrace","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logTrace","text":"log information level TRACE printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logTrace","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logTrace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logTrace","text":"","code":"#create logger logger = createLogger(level = \"TRACE\")  #log logTrace(object = logger, message = 'Hello') #> Hello  #log with level logTrace(object = logger, message = 'Hello', add.level = TRUE) #> [TRACE] Hello  #log with time logTrace(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [TRACE] 2023-02-06 17:55:26 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Method — logWarn","title":"Log Method — logWarn","text":"function prints log information level WARN.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Method — logWarn","text":"","code":"logWarn(object, message, sep = \"\", add.level = FALSE, add.time = FALSE)"},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log Method — logWarn","text":"object object class Logger message character string, message print sep character vector strings append message add.level logical, whether add log level message add.time logical, whether add time message","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log Method — logWarn","text":"None (invisible NULL).","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log Method — logWarn","text":"log information level WARN printed provided logger >= log level.","code":""},{"path":[]},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log Method — logWarn","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/logWarn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log Method — logWarn","text":"","code":"#create logger logger = createLogger(level = \"WARN\")  #log logWarn(object = logger, message = 'Hello') #> Hello  #log with level logWarn(object = logger, message = 'Hello', add.level = TRUE) #> [WARN]  Hello  #log with time logWarn(object = logger, message = 'Hello', add.level = TRUE, add.time = TRUE) #> [WARN]  2023-02-06 17:55:27 Hello"},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Connection Utility Functions — loggerConnectionUtilityFunctions","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"Functions open close connections.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"","code":"openCon(object)  closeCon(object)"},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"object object class Logger","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"openCon(): Checks object connection path file. , returns Logger opened connection file. closeCon(): Closes opened connection.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerConnectionUtilityFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connection Utility Functions — loggerConnectionUtilityFunctions","text":"","code":"logger = createLogger()  #open a connection logger = openCon(logger)  #close a connection closeCon(logger)"},{"path":"https://alebarberis.github.io/rlogging/reference/loggerGettersAndSetters.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Getters and Setters — loggerGettersAndSetters","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"Logger Getters Setters","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerGettersAndSetters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"","code":"getCon(object)  getVerbose(object)  getPath(object)  getLevel(object)  setCon(object, value)  setVerbose(object, value)  setPath(object, value)  setLevel(object, value)"},{"path":"https://alebarberis.github.io/rlogging/reference/loggerGettersAndSetters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"object Logger","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerGettersAndSetters.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"getCon(): Returns object element getVerbose(): Returns object element getPath(): Returns object element getLevel(): Returns object element setCon(): Returns updated object setVerbose(): Returns updated object setPath(): Returns updated object setLevel(): Returns updated object","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/loggerGettersAndSetters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Getters and Setters — loggerGettersAndSetters","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/printLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger Print Functions — printLog","title":"Logger Print Functions — printLog","text":"function prints provided message output defined via object.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/printLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger Print Functions — printLog","text":"","code":"printLog(object, message, sep)"},{"path":"https://alebarberis.github.io/rlogging/reference/printLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger Print Functions — printLog","text":"object Logger message character string, message print sep character vector strings append element.","code":""},{"path":"https://alebarberis.github.io/rlogging/reference/printLog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Logger Print Functions — printLog","text":"Alessandro Barberis","code":""},{"path":"https://alebarberis.github.io/rlogging/news/index.html","id":"rlogging-0009000","dir":"Changelog","previous_headings":"","what":"rlogging 0.0.0.9000","title":"rlogging 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
